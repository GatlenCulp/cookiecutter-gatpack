[project]
name = "cookiecutter_gatpack"
version = "0.0.1"
description = "A CookieCutter template for Gatpack init"
authors = [
  { name = "Gatlen Culp" },
]
# 
license = { file = "LICENSE" }
# 
readme = {file = "README.md", content-type = "text/markdown"}
classifiers = [
    "Private :: Do Not Upload",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
]
requires-python = "~=3.12"

dependencies = [
    "gatpack>=0.0.3",
]

[project.urls]
# Homepage = "https://.github.io/cookiecutter-gatpack/"
Repository = "https://github.com/GatlenCulp/cookiecutter-gatpack"
# Documentation = "https://.github.io/cookiecutter-gatpack/"

[tool.ruff]
cache-dir = ".cache/ruff"
line-length = 100

[tool.ruff.lint]
# TODO: Different groups of linting styles depending on code use.
select = ["ALL"]
ignore = [] # Add ignores as needed


[tool.ruff.lint.isort]
known-first-party = ["cookiecutter_gatpack"]
force-sort-within-sections = true

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"] # Allow unused imports in __init__.py

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pycodestyle]
max-doc-length = 99

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pytest.ini_options]
addopts = """
--tb=long
--code-highlight=yes
"""

testpaths = ["tests"]
log_file = "./logs/pytest.log"


[tool.pydoclint]
style = "google"
arg-type-hints-in-docstring = false
check-return-types = true
exclude = '\.venv'

[tool.pyright]
include = ["."]
